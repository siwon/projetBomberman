IControllerToMenu

                Enum EMenuKeys
                {
                    UP, DOWN, LEFT, RIGHT, VALID, BACK, NONE
                }

                Enum EGameKeys
                {
                    UP = 0, DOWN, LEFT, RIGHT, ACTION1, ACTION2, PAUSE
                }

                Enum EControllerType
                {
                	  KEYBOARD, GAMEPAD, WII
                }

                Struct SKeysConfig
                {
                    String controllerType;
                    String keys[7];
                    bool errors[7];
                }

                - EMenuKeys getKeyPressed()
                - SKeysConfig getConfig(int player)
                - SKeysConfig setPlayerController(int player, EControllerType type)
                - SKeysConfig setPlayerKey(int player, EGameKeys key)

IControllerToNetwork

                Struct SKeyPressed
                {
                    bool keys[4][7];
                }

                - SKeyPressed getKeysPressed();

INetworkToMenu

                Enum GameOptions
                {
                    // Liste exhaustive
                }

                Struct SGameConfig
                {
                    bool isLocal;
                    unsigned int nbPlayers;
                    String playersName[4];
                    unsigned int nbOptions[//NB_OPTIONS];
                }

                - void joinGame(String ip) throw NetworkException
                - int getFreeSlots() throw NetworkException
                - void setBookedSlots(unsigned int nb) throw NetworkException
                - void setPlayersName(String[] names) throw NetworkException
                - string[] getPlayers() throw NetworkException
                - unsigned int[] getScores() throw NetworkException
                - bool isStarted() throw NetworkException
                - void startGame() throw NetworkException
                - string getIPAddress()

IGameEngineToNetwork

                Enum EBonusType
                {
                    // Liste exhaustive
                }

                Enum EExplosiveType
                {
                    // Liste exhaustive
                }

                Enum EPlayerState
                {
                    ALIVE, DEAD
                }

                Enum EFlameLocation
                {
                    ORIGIN, MIDDLE, END
                }

                ICoords
                {
                    unsigned int x;
                    unsigned int y;
                }

                IBonus
                {
                    SCoords coords;
                    EBonusType type;
                }

                IExplosive
                {
                    SCoords coords;
                    EExplosiveType type;
                }

                IPlayer
                {
                    SCoords coords;
                    EOrientation orientation;
                    unsigned int number;
                    EPlayerState state;
                    unsigned int step;
                }

                IFlame
                {
                    SCoords coords;
                    EOrientation orientation;
                    EFlameLocation location;
                    unsigned int step;
                }

                IBoard
                {
                    vector<SCoords> boxes;
                    vector<SBonus> bonus;
                    vector<SExplosive> explosives;
                    vector<SPlayer> players;
                    vector<SFlame> flames;
                }

                - SBoard getBoard()
                - int isFinished()

INetworkToGameInterface

                - <include IGameEngineToNetwork>
                - int isPaused()

INetworkToGameEngine

                - SGameConfig getGameOptions()
                - SKeyPressed getKeysPressed()
                - bool isPaused()




















